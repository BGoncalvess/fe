name: ci/cd

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
  push:
    branches: ["*"]
  workflow_dispatch:

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.SERVICES }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Select MS
        id: set-services
        run: |
          SERVICES=$(git diff --name-only HEAD main | grep -oP '(?<=src/|tests/)[^/]*' | grep -oP '^[^.]+' | uniq | tr '\n' ' ')
          echo "SERVICES=$SERVICES" >> $GITHUB_ENV
          DIR=$(git diff --name-only HEAD main | grep -oP '(?<=src/|tests/)[^/]*' | grep -oP '^[^.]+' | uniq | tr '\n' ' ')
            echo "SERVICES=$SERVICES" >> $GITHUB_ENV
            echo "services=$SERVICES" >> $GITHUB_OUTPUT
      
  build:
    needs: ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ["dev", "qa", "prod"]
    environment: ${{ matrix.environment }}
    env:
      SERVICES: ${{ needs.ci.outputs.services }}
      VITE_ASSISTANT_PORT: ${{ vars.VITE_ASSISTANT_PORT }}
      VITE_HOST_PORT: ${{ vars.VITE_HOST_PORT }}
      VITE_ASSISTANT_URL: ${{ vars.VITE_ASSISTANT_URL }}
    steps:   
      - name: Build and Push Dynamically
        run: |
          for service in $SERVICES; do
            IMAGE_NAME=$(echo "$service" | tr '[:upper:]' '[:lower:]')
            REPO_NAME=$(echo "${{ vars.ACR_REPO_NAME }}" | tr '[:upper:]' '[:lower:]')
            TAG="${{ vars.ACR_NAME }}.azurecr.io/${REPO_NAME}/${IMAGE_NAME}-${{ matrix.environment }}:latest"

            echo "Building and pushing $TAG"
            
            docker compose build "$IMAGE_NAME-${{ matrix.environment }}"
            docker tag "$IMAGE_NAME-${{ matrix.environment }}" "$TAG"
            docker push "$TAG"
          done

      - name: Set up environment variables
        run: |
          mkdir -p generated-ymls/
          for i in ${!SERVICES[@]}; do
            service=${SERVICES[i]}
            dir="${DIRS[i]}"
            export SERVICE_NAME="$service"
            source "./.env.template"
            envsubst < "${dir}/infrastructure/manifest.yml" > "./generated-ymls/${service}.yml"
            cat "generated-ymls/${service}.yml"
          done 

  cd:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up git configuration
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create PR
        run: |
          git checkout -b manifests
          git add generated-ymls/*
          git commit -m "Add changes"
          git status
          git push --set-upstream origin manifests

          gh pr create --base ${{ env.DESTINATION_BRANCH_NAME }} \
                       --head manifests \
                       --title "Automated PR" \
                       --body "PR created by workflow" \
                       --repo ${{ env.IDP_REPO_NAME }}
        env:
          IDP_REPO_NAME: ${{ vars.IDP_REPO_NAME }}
          DESTINATION_BRANCH_NAME: ${{ vars.DESTINATION_BRANCH_NAME }}
          IDP_REPO_TOKEN: ${{ secrets.IDP_REPO_TOKEN }}
